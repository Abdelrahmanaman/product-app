services: # Define the containers/services in your application
  backend: # First service - Rust backend
    build: # Build configuration
      context: ./backend
      dockerfile: Dockerfile
    ports: # Port mapping
      - "8000:8000" # Host port:Container port
    environment: # Environment variables
      - RUST_LOG=info
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    networks: # Network configuration
      - app-network # Connect to the defined network

  frontend: # Second service - Next.js frontend
    build:
      context: ./frontend # Frontend project directory
      dockerfile: Dockerfile # Frontend Dockerfile
    ports:
      - "3000:3000" # Expose frontend port
    depends_on: # Ensure backend starts before frontend
      - backend
    networks:
      - app-network # Same network as backend

  db: # Third service - Postgres database
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
